{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport ValidCode from \"@/components/ValidCode\";\nexport default {\n  name: \"Login\",\n  components: {\n    ValidCode\n  },\n  data() {\n    //验证码校验\n    const validateCode = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入验证码'));\n      } else if (value.toLowerCase() !== this.code) {\n        callback(new Error('验证码错误'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      forgetUserForm: {},\n      //忘记密码的表单数据\n      forgetPassDialogVis: false,\n      code: '',\n      //验证码组件传过来的code\n      user: {\n        code: '',\n        //用户输入的code\n        username: '',\n        password: ''\n      },\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入账号',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }],\n        code: [{\n          validator: validateCode,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    resetPassword() {},\n    getCode(code) {\n      this.code = code.toLowerCase();\n    },\n    login() {\n      this.$refs['loginRef'].validate(valid => {\n        if (valid) {\n          //验证通过\n          this.$request.post('/login', this.user).then(res => {\n            if (res.code === '200') {\n              this.$router.push('/');\n              this.$message.success('登陆成功');\n              localStorage.setItem(\"honey-user\", JSON.stringify(res.data)); //存储用户信息\n            } else {\n              this.$message.error(res.msg);\n            }\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["ValidCode","name","components","data","validateCode","rule","value","callback","Error","toLowerCase","code","forgetUserForm","forgetPassDialogVis","user","username","password","rules","required","message","trigger","validator","methods","resetPassword","getCode","login","$refs","validate","valid","$request","post","then","res","$router","push","$message","success","localStorage","setItem","JSON","stringify","error","msg"],"sources":["src/views/Login.vue"],"sourcesContent":["<template>\r\n  <div style=\"height: 100vh; display: flex; align-items: center; justify-content: center; background-color: #22c422\">\r\n    <div style=\"display: flex; background-color: white; width: 50%; border-radius: 5px; overflow: hidden\">\r\n      <div style=\"flex: 1\">\r\n        <img src = \"@/assets/login.png\" alt=\"\" style=\"width: 100%; height: 100%\">\r\n      </div>\r\n      <div style=\"flex: 1; display: flex; align-items: center; justify-content: center\">\r\n        <el-form :model=\"user\" style=\"width: 80%\" :rules=\"rules\" ref=\"loginRef\">\r\n          <div style=\"font-size: 20px; font-weight: bold; text-align: center; margin-bottom: 20px\">欢迎登录后台管理系统</div>\r\n          <el-form-item prop=\"username\">\r\n            <el-input prefix-icon=\"el-icon-user\" placeholder=\"请输入帐号\" v-model=\"user.username\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item prop=\"password\">\r\n            <el-input  show-password prefix-icon=\"el-icon-lock\" placeholder=\"请输入密码\" v-model=\"user.password\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item prop=\"code\">\r\n            <div style=\"display: flex\">\r\n              <el-input prefix-icon=\"el-icon-circle-check\" style=\"flex: 1\" placeholder=\"请输入验证码\" v-model=\"user.code\"></el-input>\r\n              <div style=\"flex: 1; height: 40px\">\r\n                <valid-code @update:value=\"getCode\" />\r\n              </div>\r\n            </div>\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <el-button type=\"primary\" style=\"width: 100%\" @click=\"login\">登 录</el-button>\r\n          </el-form-item>\r\n          <div style=\"display: flex\">\r\n            <div style=\"flex: 1\">还没有账号？请 <span style=\"color: #40a9ff; cursor: pointer\" @click=\"$router.push('/register')\">注册</span></div>\r\n            <div style=\"flex: 1; text-align: right\"><span style=\"color: #40a9ff; cursor: pointer\" @click=\"handleForgetPass\">忘记密码</span> </div>\r\n          </div>\r\n        </el-form>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <el-dialog title=\"忘记密码\" :visible.sync=\"forgetPassDialogVis\" width=\"30%\">\r\n      <el-form :model=\"forgetUserForm\" label-width=\"80px\" style=\"padding-right: 20px\">\r\n        <el-form-item label=\"用户名\" >\r\n          <el-input v-model=\"forgetUserForm.username\" autocomplete=\"off\" placeholder=\"请输入用户名\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"手机号\" >\r\n          <el-input v-model=\"forgetUserForm.phone\" autocomplete=\"off\" placeholder=\"请输入手机号\"></el-input>\r\n        </el-form-item>\r\n\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"forgetPassDialogVis = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"resetPassword\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport ValidCode from \"@/components/ValidCode\";\r\n\r\nexport default {\r\n  name: \"Login\",\r\n  components: {\r\n    ValidCode\r\n  },\r\n  data(){\r\n    //验证码校验\r\n    const validateCode = (rule, value, callback) =>{\r\n      if(value ===''){\r\n        callback(new Error('请输入验证码'))\r\n      }\r\n      else if(value.toLowerCase() !== this.code){\r\n        callback(new Error('验证码错误'))\r\n      }\r\n      else {\r\n        callback()\r\n      }\r\n    }\r\n    return {\r\n      forgetUserForm: {}, //忘记密码的表单数据\r\n      forgetPassDialogVis: false,\r\n      code:'', //验证码组件传过来的code\r\n      user: {\r\n        code: '', //用户输入的code\r\n        username: '',\r\n        password: ''\r\n      },\r\n      rules: {\r\n        username: [\r\n          {required: true, message: '请输入账号', trigger: 'blur'},\r\n        ],\r\n        password: [\r\n          {required: true, message: '请输入密码', trigger: 'blur'},\r\n        ],\r\n        code:[\r\n          {\r\n            validator: validateCode, trigger:'blur'\r\n          },\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  methods:{\r\n    resetPassword(){\r\n\r\n    },\r\n    getCode(code){\r\n      this.code = code.toLowerCase()\r\n    },\r\n      login(){\r\n      this.$refs['loginRef'].validate((valid) => {\r\n        if(valid){\r\n          //验证通过\r\n          this.$request.post('/login', this.user).then(res => {\r\n            if(res.code === '200'){\r\n              this.$router.push('/')\r\n              this.$message.success('登陆成功')\r\n              localStorage.setItem(\"honey-user\", JSON.stringify(res.data)) //存储用户信息\r\n            }\r\n            else{\r\n              this.$message.error(res.msg)\r\n            }\r\n          })\r\n        }\r\n      })\r\n\r\n      }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":";AAuDA,OAAAA,SAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAF;EACA;EACAG,KAAA;IACA;IACA,MAAAC,YAAA,GAAAA,CAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA,OACA,IAAAF,KAAA,CAAAG,WAAA,YAAAC,IAAA;QACAH,QAAA,KAAAC,KAAA;MACA,OACA;QACAD,QAAA;MACA;IACA;IACA;MACAI,cAAA;MAAA;MACAC,mBAAA;MACAF,IAAA;MAAA;MACAG,IAAA;QACAH,IAAA;QAAA;QACAI,QAAA;QACAC,QAAA;MACA;MACAC,KAAA;QACAF,QAAA,GACA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAJ,QAAA,GACA;UAAAE,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAT,IAAA,GACA;UACAU,SAAA,EAAAhB,YAAA;UAAAe,OAAA;QACA;MAEA;IACA;EACA;EACAE,OAAA;IACAC,cAAA,GAEA;IACAC,QAAAb,IAAA;MACA,KAAAA,IAAA,GAAAA,IAAA,CAAAD,WAAA;IACA;IACAe,MAAA;MACA,KAAAC,KAAA,aAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA;UACA,KAAAC,QAAA,CAAAC,IAAA,gBAAAhB,IAAA,EAAAiB,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAArB,IAAA;cACA,KAAAsB,OAAA,CAAAC,IAAA;cACA,KAAAC,QAAA,CAAAC,OAAA;cACAC,YAAA,CAAAC,OAAA,eAAAC,IAAA,CAAAC,SAAA,CAAAR,GAAA,CAAA5B,IAAA;YACA,OACA;cACA,KAAA+B,QAAA,CAAAM,KAAA,CAAAT,GAAA,CAAAU,GAAA;YACA;UACA;QACA;MACA;IAEA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}