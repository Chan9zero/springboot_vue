{"ast":null,"code":"import Vue from 'vue';\nimport VueRouter from 'vue-router';\n//解决导航栏点击报错问题\nconst originalPush = VueRouter.prototype.push;\nVueRouter.prototype.push = function push(location) {\n  return originalPush.call(this, location).catch(err => err);\n};\nVue.use(VueRouter);\nconst routes = [{\n  path: '/',\n  name: 'Manager',\n  component: () => import('../views/Manager'),\n  redirect: 'home',\n  //重定向\n  children: [{\n    path: '403',\n    name: 'Auth',\n    component: () => import('../views/manager/Auth')\n  }, {\n    path: 'home',\n    name: 'Home',\n    component: () => import('../views/manager/Home')\n  }, {\n    path: 'user',\n    name: 'User',\n    component: () => import('../views/manager/User')\n  }, {\n    path: 'person',\n    name: 'Person',\n    component: () => import('../views/manager/Person')\n  }]\n}, {\n  path: '/login',\n  name: 'Login',\n  component: () => import('../views/Login')\n}, {\n  path: '/register',\n  name: 'Register',\n  component: () => import('../views/Register')\n}, {\n  path: '/*',\n  name: '404',\n  component: () => import('../views/404')\n}];\nconst router = new VueRouter({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes\n});\nrouter.beforeEach((to, from, next) => {\n  //to是到达的路由信息\n  //from是开源的路由信息\n  //next 是帮助我们跳转路由的函数\n  let adminPaths = ['/user'];\n  let user = JSON.parse(localStorage.getItem('honey-user') || '{}');\n  //如果当前用户不是管理员且访问了管理员权限的路径，那么访问跳转别的页面\n  if (user.role !== '管理员' && adminPaths.includes(to.path)) {\n    next('/403');\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["Vue","VueRouter","originalPush","prototype","push","location","call","catch","err","use","routes","path","name","component","redirect","children","router","mode","base","process","env","BASE_URL","beforeEach","to","from","next","adminPaths","user","JSON","parse","localStorage","getItem","role","includes"],"sources":["C:/Users/Chan9zero/Desktop/biyesheji-1/project-1/vue/src/router/index.js"],"sourcesContent":["import Vue from 'vue'\nimport VueRouter from 'vue-router'\n//解决导航栏点击报错问题\nconst originalPush = VueRouter.prototype.push\nVueRouter.prototype.push = function push (location){\n  return originalPush.call(this, location).catch(err => err)\n}\nVue.use(VueRouter)\n\nconst routes = [\n  {\n    path: '/',\n    name: 'Manager',\n    component: () => import('../views/Manager'),\n    redirect: 'home', //重定向\n    children: [\n      { path:'403', name: 'Auth', component: () => import('../views/manager/Auth')},\n      { path:'home', name:'Home', component: () =>import('../views/manager/Home') },\n      { path:'user', name:'User', component: () =>import('../views/manager/User') },\n      { path:'person', name:'Person', component: () =>import('../views/manager/Person') },\n    ]\n  },\n\n  { path: '/login', name: 'Login', component: () => import('../views/Login')},\n  { path: '/register', name: 'Register', component: () => import('../views/Register')},\n  { path: '/*', name:'404', component: () =>import('../views/404') },\n]\n\nconst router = new VueRouter({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes\n})\n\nrouter.beforeEach((to, from, next) =>{\n  //to是到达的路由信息\n  //from是开源的路由信息\n  //next 是帮助我们跳转路由的函数\n  let adminPaths = ['/user']\n  let user = JSON.parse(localStorage.getItem('honey-user') || '{}')\n  //如果当前用户不是管理员且访问了管理员权限的路径，那么访问跳转别的页面\n  if(user.role !== '管理员' && adminPaths.includes(to.path)){\n    next('/403')\n  }\n  else{\n    next()\n  }\n\n})\n\nexport default router\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,SAAS,MAAM,YAAY;AAClC;AACA,MAAMC,YAAY,GAAGD,SAAS,CAACE,SAAS,CAACC,IAAI;AAC7CH,SAAS,CAACE,SAAS,CAACC,IAAI,GAAG,SAASA,IAAIA,CAAEC,QAAQ,EAAC;EACjD,OAAOH,YAAY,CAACI,IAAI,CAAC,IAAI,EAAED,QAAQ,CAAC,CAACE,KAAK,CAACC,GAAG,IAAIA,GAAG,CAAC;AAC5D,CAAC;AACDR,GAAG,CAACS,GAAG,CAACR,SAAS,CAAC;AAElB,MAAMS,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,SAAS;EACfC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,kBAAkB,CAAC;EAC3CC,QAAQ,EAAE,MAAM;EAAE;EAClBC,QAAQ,EAAE,CACR;IAAEJ,IAAI,EAAC,KAAK;IAAEC,IAAI,EAAE,MAAM;IAAEC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,uBAAuB;EAAC,CAAC,EAC7E;IAAEF,IAAI,EAAC,MAAM;IAAEC,IAAI,EAAC,MAAM;IAAEC,SAAS,EAAEA,CAAA,KAAK,MAAM,CAAC,uBAAuB;EAAE,CAAC,EAC7E;IAAEF,IAAI,EAAC,MAAM;IAAEC,IAAI,EAAC,MAAM;IAAEC,SAAS,EAAEA,CAAA,KAAK,MAAM,CAAC,uBAAuB;EAAE,CAAC,EAC7E;IAAEF,IAAI,EAAC,QAAQ;IAAEC,IAAI,EAAC,QAAQ;IAAEC,SAAS,EAAEA,CAAA,KAAK,MAAM,CAAC,yBAAyB;EAAE,CAAC;AAEvF,CAAC,EAED;EAAEF,IAAI,EAAE,QAAQ;EAAEC,IAAI,EAAE,OAAO;EAAEC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,gBAAgB;AAAC,CAAC,EAC3E;EAAEF,IAAI,EAAE,WAAW;EAAEC,IAAI,EAAE,UAAU;EAAEC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,mBAAmB;AAAC,CAAC,EACpF;EAAEF,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAC,KAAK;EAAEC,SAAS,EAAEA,CAAA,KAAK,MAAM,CAAC,cAAc;AAAE,CAAC,CACnE;AAED,MAAMG,MAAM,GAAG,IAAIf,SAAS,CAAC;EAC3BgB,IAAI,EAAE,SAAS;EACfC,IAAI,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ;EAC1BX;AACF,CAAC,CAAC;AAEFM,MAAM,CAACM,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAI;EACnC;EACA;EACA;EACA,IAAIC,UAAU,GAAG,CAAC,OAAO,CAAC;EAC1B,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,IAAI,IAAI,CAAC;EACjE;EACA,IAAGJ,IAAI,CAACK,IAAI,KAAK,KAAK,IAAIN,UAAU,CAACO,QAAQ,CAACV,EAAE,CAACZ,IAAI,CAAC,EAAC;IACrDc,IAAI,CAAC,MAAM,CAAC;EACd,CAAC,MACG;IACFA,IAAI,CAAC,CAAC;EACR;AAEF,CAAC,CAAC;AAEF,eAAeT,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}